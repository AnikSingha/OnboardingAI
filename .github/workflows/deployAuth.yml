name: Deploy auth

on:
  push:
    branches:
      - auth

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy and start service on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Inject environment variables
            export ALGORITHM="${{ secrets.ALGORITHM }}"
            export DB_URI="${{ secrets.DB_URI }}"
            export EMAILPASSWORD="${{ secrets.EMAILPASSWORD }}"
            export SECRET_KEY="${{ secrets.SECRET_KEY }}"
            echo "Environment variables injected."

            # Navigate to project directory
            cd ~/OnboardingAI

            # Switch to auth branch
            echo "Switching to auth branch..."
            git fetch origin auth
            git checkout auth
            git reset --hard origin/auth
            echo "Codebase updated to latest auth branch."

            # Install npm dependencies only if needed
            mkdir -p ~/.npm-cache
            if [ -f auth-service/package-lock.json ]; then
              echo "Checking if npm dependencies have changed..."
              if ! cmp -s auth-service/package-lock.json ~/.npm-cache/package-lock.json; then
                echo "Dependencies changed. Installing npm packages..."
                cd auth-service
                npm install
                cp package-lock.json ~/.npm-cache/
              else
                echo "Dependencies are up-to-date."
              fi
            else
              echo "No package-lock.json found. Running npm install..."
              cd auth-service
              npm install
            fi

            # Restart Node.js application with PM2
            echo "Restarting Node.js application with PM2..."
            pm2 stop auth-service || echo "PM2 process not found, starting fresh..."
            pm2 start server.js --name auth-service --cwd ~/OnboardingAI/auth-service
            echo "Node.js application restarted with PM2."

            # Reload Nginx only if configuration has changed
            echo "Checking Nginx configuration..."
            if ! cmp -s /etc/nginx/nginx.conf /tmp/last-nginx.conf; then
              echo "Nginx configuration changed. Testing and reloading..."
              sudo nginx -t && sudo systemctl reload nginx
              cp /etc/nginx/nginx.conf /tmp/last-nginx.conf
            else
              echo "Nginx configuration unchanged. Skipping reload."
            fi
          EOF
